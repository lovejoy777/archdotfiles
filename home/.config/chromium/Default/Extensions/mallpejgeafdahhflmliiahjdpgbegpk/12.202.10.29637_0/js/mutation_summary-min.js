// Copyright 2011 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

(function(C){"use strict";var D='matchesSelector';if('webkitMatchesSelector'in Element.prototype)D='webkitMatchesSelector';else if('mozMatchesSelector'in Element.prototype)D='mozMatchesSelector';var E=C.MutationObserver||C.WebKitMutationObserver||C.MozMutationObserver;if(typeof E!='function'){return}var F='__mutation_summary_node_map_id__';var G=1;function ensureId(a){if(!a[F]){a[F]=G++;return true}return false}function NodeMap(){this.map_={}}NodeMap.prototype={set:function(a,b){ensureId(a);this.map_[a[F]]={k:a,v:b}},get:function(a){if(ensureId(a))return;var b=this.map_[a[F]];if(b)return b.v},has:function(a){return!ensureId(a)&&a[F]in this.map_},'delete':function(a){if(ensureId(a))return;delete this.map_[a[F]]},keys:function(){var a=[];for(var b in this.map_){a.push(this.map_[b].k)}return a}};function hasOwnProperty(a,b){return Object.prototype.hasOwnProperty.call(a,b)}var H=0;var I=1;var J=2;var K=3;var L=4;var M=5;function enteredOrExited(a){return a==I||a==K}var N=Array.prototype.forEach.call.bind(Array.prototype.forEach);function MutationProjection(a,b,c){this.rootNode=a;this.elementFilter=b;this.calcReordered=c}MutationProjection.prototype={getChange:function(a){var b=this.changeMap.get(a);if(!b){b={target:a};this.changeMap.set(a,b)}if(a.nodeType==Node.ELEMENT_NODE)b.matchCaseInsensitive=a instanceof HTMLElement&&a.ownerDocument instanceof HTMLDocument;return b},getParentChange:function(a){var b=this.getChange(a);if(!b.childList){b.childList=true;b.oldParentNode=null}return b},handleChildList:function(c){this.childListChanges=true;N(c.removedNodes,function(a){var b=this.getParentChange(a);if(b.added||b.oldParentNode)b.added=false;else b.oldParentNode=c.target},this);N(c.addedNodes,function(a){var b=this.getParentChange(a);b.added=true},this)},handleAttributes:function(a){this.attributesChanges=true;var b=this.getChange(a.target);if(!b.attributes){b.attributes=true;b.attributeOldValues={}}var c=b.attributeOldValues;if(!hasOwnProperty(c,a.attributeName)){c[a.attributeName]=a.oldValue}},handleCharacterData:function(a){this.characterDataChanges=true;var b=this.getChange(a.target);if(b.characterData)return;b.characterData=true;b.characterDataOldValue=a.oldValue},processMutations:function(g){this.mutations=g;this.changeMap=new NodeMap;this.mutations.forEach(function(a){switch(a.type){case'childList':this.handleChildList(a);break;case'attributes':this.handleAttributes(a);break;case'characterData':this.handleCharacterData(a);break}},this);var h=this.entered=[];var i=this.exited=[];var j=this.stayedIn=new NodeMap;if(!this.childListChanges&&!this.attributesChanges)return;var k=this.matchabilityChange.bind(this);var l=this.reachabilityChange.bind(this);var m=this.wasReordered.bind(this);var n=new NodeMap;var o=this;function visitNode(a,b){if(n.has(a))return;n.set(a,true);var c=o.changeMap.get(a);var d=b;if((c&&c.childList)||d==undefined)d=l(a);if(d==H)return;k(a);if(d==I){h.push(a)}else if(d==K){i.push(a)}else if(d==J){var e=J;if(c&&c.childList){if(c.oldParentNode!==a.parentNode){e=L}else if(o.calcReordered&&m(a)){e=M}}j.set(a,e)}if(d==J)return;for(var f=a.firstChild;f;f=f.nextSibling){visitNode(f,d)}}this.changeMap.keys().forEach(function(a){visitNode(a)})},getChanged:function(d){var e=this.matchabilityChange.bind(this);this.entered.forEach(function(a){var b=e(a);if(b==I||b==J)d.added.push(a)});this.stayedIn.keys().forEach(function(a){var b=e(a);if(b==I){d.added.push(a)}else if(b==K){d.removed.push(a)}else if(b==J&&(d.reparented||d.reordered)){var c=this.stayedIn.get(a);if(d.reparented&&c==L)d.reparented.push(a);else if(d.reordered&&c==M)d.reordered.push(a)}},this);this.exited.forEach(function(a){var b=e(a);if(b==K||b==J)d.removed.push(a)})},getOldParentNode:function(a){var b=this.changeMap.get(a);if(b&&b.childList)return b.oldParentNode?b.oldParentNode:null;var c=this.reachabilityChange(a);if(c==H||c==I)throw Error('getOldParentNode requested on invalid node.');return a.parentNode},getOldPreviousSibling:function(a){var b=this.childlistChanges.get(a.parentNode);if(!b||!this.wasReordered(a))throw Error('getOldPreviousSibling requested on invalid node.');return b.oldPreviousSibling.get(a)},getOldAttribute:function(a,b){var c=this.changeMap.get(a);if(!c||!c.attributes)throw Error('getOldAttribute requested on invalid node.');if(c.matchCaseInsensitive)b=b.toLowerCase();if(!hasOwnProperty(c.attributeOldValues,b))throw Error('getOldAttribute requested for unchanged attribute name.');return c.attributeOldValues[b]},getAttributesChanged:function(c){if(!this.attributesChanges)return{};var d;var e;if(c){d={};e={};c.forEach(function(a){d[a]=true;var b=a.toLowerCase();if(a!=b){e[b]=a}})}var f={};var g=this.changeMap.keys();for(var i=0;i<g.length;i++){var h=g[i];var j=this.changeMap.get(h);if(!j.attributes)continue;if(J!=this.reachabilityChange(h)||J!=this.matchabilityChange(h))continue;var k=h;var l=j.attributeOldValues;Object.keys(l).forEach(function(a){var b=a;if(j.matchCaseInsensitive&&e&&e[a])b=e[a];if(d&&!d[b])return;if(k.getAttribute(a)==l[a])return;if(!f[b])f[b]=[];f[b].push(k)})}return f},getOldCharacterData:function(a){var b=this.changeMap.get(a);if(!b||!b.characterData)throw Error('getOldCharacterData requested on invalid node.');return b.characterDataOldValue},getCharacterDataChanged:function(){if(!this.characterDataChanges)return[];var a=this.changeMap.keys();var b=[];for(var i=0;i<a.length;i++){var c=a[i];if(J!=this.reachabilityChange(c)||J!=this.matchabilityChange(c))continue;var d=this.changeMap.get(c);if(!d.characterData||c.textContent==d.characterDataOldValue)continue;b.push(c)}return b},reachabilityChange:function(c){this.reachableCache=this.reachableCache||new NodeMap;this.wasReachableCache=this.wasReachableCache||new NodeMap;var d=this.rootNode;var e=this.changeMap;var f=this.reachableCache;var g=this.wasReachableCache;function getOldParent(a){var b=e.get(a);if(b&&b.childList){if(b.oldParentNode)return b.oldParentNode;if(b.added)return null}return a.parentNode}function getIsReachable(a){if(a===d)return true;if(!a)return false;var b=f.get(a);if(b===undefined){b=getIsReachable(a.parentNode);f.set(a,b)}return b}function getWasReachable(a){if(a===d)return true;if(!a)return false;var b=g.get(a);if(b===undefined){b=getWasReachable(getOldParent(a));g.set(a,b)}return b}if(getIsReachable(c))return getWasReachable(c)?J:I;else return getWasReachable(c)?K:H},checkWasMatching:function(b,c,d){var e=this.changeMap.get(b);if(!e||!e.attributeOldValues)return d;var f=c.tagName;if(e.matchCaseInsensitive&&f!='*'&&hasOwnProperty(c,'caseInsensitiveTagName')){f=c.caseInsensitiveTagName}if(f!='*'&&f!=b.tagName)return false;var g=e.attributeOldValues;var h=c.qualifiers.some(function(a){if(a.class)return hasOwnProperty(g,'class');else if(a.id)return hasOwnProperty(g,'id');else{return e.matchCaseInsensitive&&hasOwnProperty(a,'caseInsensitiveAttrName')?hasOwnProperty(g,a.caseInsensitiveAttrName):hasOwnProperty(g,a.attrName)}});if(!h)return d;for(var i=0;i<c.qualifiers.length;i++){var j=c.qualifiers[i];var k;if(j.class)k='class';else if(j.id)k='id';else{if(e.matchCaseInsensitive&&hasOwnProperty(j,'caseInsensitiveAttrName')){k=j.caseInsensitiveAttrName}else{k=j.attrName}}var l=j.class?true:j.contains;var m=hasOwnProperty(g,k)?g[k]:b.getAttribute(k);if(m==null)return false;if(j.hasOwnProperty('attrValue')){if(!l&&j.attrValue!==m)return false;var n=m.split(' ').some(function(a){return a==j.attrValue});if(!n)return false}}return true},matchabilityChange:function(f){if(this.filterCharacterData){switch(f.nodeType){case Node.COMMENT_NODE:case Node.TEXT_NODE:return J;default:return H}}if(!this.elementFilter)return J;if(f.nodeType!==Node.ELEMENT_NODE)return H;var g=f;function computeMatchabilityChange(a){if(!this.matchCache)this.matchCache={};if(!this.matchCache[a.selectorString])this.matchCache[a.selectorString]=new NodeMap;var b=this.matchCache[a.selectorString];var c=b.get(g);if(c!==undefined)return c;var d=g[D](a.selectorString);var e=this.checkWasMatching(g,a,d);if(d)c=e?J:I;else c=e?K:H;b.set(g,c);return c}var h=this.elementFilter.map(computeMatchabilityChange,this);var j=H;var i=0;while(j!=J&&i<h.length){switch(h[i]){case J:j=J;break;case I:if(j==K)j=J;else j=I;break;case K:if(j==I)j=J;else j=K;break}i++}return j},processChildlistChanges:function(){if(this.childlistChanges)return;var f=this.childlistChanges=new NodeMap;function getChildlistChange(a){var b=f.get(a);if(!b){b={added:new NodeMap,removed:new NodeMap,maybeMoved:new NodeMap,oldPrevious:new NodeMap};f.set(a,b)}return b}var g=this.reachabilityChange.bind(this);this.mutations.forEach(function(c){if(c.type!='childList')return;if(g(c.target)!=J)return;var d=getChildlistChange(c.target);var e=c.previousSibling;function recordOldPrevious(a,b){if(!a||d.oldPrevious.has(a)||d.added.has(a)||d.maybeMoved.has(a))return;if(b&&(d.added.has(b)||d.maybeMoved.has(b)))return;d.oldPrevious.set(a,b)}N(c.removedNodes,function(a){recordOldPrevious(a,e);if(d.added.has(a)){d.added.delete(a)}else{d.removed.set(a,true);d.maybeMoved.delete(a,true)}e=a});recordOldPrevious(c.nextSibling,e);N(c.addedNodes,function(a){if(d.removed.has(a)){d.removed.delete(a);d.maybeMoved.set(a,true)}else{d.added.set(a,true)}})})},wasReordered:function(c){if(!this.childListChanges)return false;this.processChildlistChanges();var d=this.childlistChanges.get(c.parentNode);if(d.moved)return d.moved.get(c);var e=d.moved=new NodeMap;var f=new NodeMap;function isFirstOfPending(a){while(a=a.previousSibling){if(f.has(a))return false}return true}function isMoved(a){if(!a)return false;if(!d.maybeMoved.has(a))return false;var b=e.get(a);if(b!==undefined)return b;if(f.has(a)){b=isFirstOfPending(a)}else{f.set(a,true);b=getPrevious(a)!==getOldPrevious(a)}if(f.has(a)){f.delete(a);e.set(a,b)}else{b=e.get(a)}return b}var g=d.oldPreviousSibling=new NodeMap;function getOldPrevious(a){var b=g.get(a);if(b!==undefined)return b;b=d.oldPrevious.get(a);while(b&&(d.removed.has(b)||isMoved(b))){b=getOldPrevious(b)}if(b===undefined)b=a.previousSibling;g.set(a,b);return b}var h=new NodeMap;function getPrevious(a){if(h.has(a))return h.get(a);var b=a.previousSibling;while(b&&(d.added.has(b)||isMoved(b)))b=b.previousSibling;h.set(a,b);return b}d.maybeMoved.keys().forEach(isMoved);return d.moved.get(c)}};var O=/[a-zA-Z_]+/;var P=/[a-zA-Z0-9_\-]+/;function parseElementFilter(f){var g=[];var h;var j;function newSelector(){if(h){if(j){h.qualifiers.push(j);j=undefined}g.push(h)}h={qualifiers:[]}}function newQualifier(){if(j)h.qualifiers.push(j);j={}}var k=/\s/;var l;var m='Invalid or unsupported selector syntax.';var n=1;var o=2;var p=3;var q=4;var r=5;var s=6;var t=7;var u=8;var v=9;var w=10;var x=11;var y=12;var z=13;var A=14;var B=n;var i=0;while(i<f.length){var c=f[i++];switch(B){case n:if(c.match(O)){newSelector();h.tagName=c;B=o;break}if(c=='*'){newSelector();h.tagName='*';B=p;break}if(c=='.'){newSelector();newQualifier();h.tagName='*';j.class=true;B=q;break}if(c=='#'){newSelector();newQualifier();h.tagName='*';j.id=true;B=q;break}if(c=='['){newSelector();newQualifier();h.tagName='*';j.attrName='';B=s;break}if(c.match(k))break;throw Error(m);case o:if(c.match(P)){h.tagName+=c;break}if(c=='.'){newQualifier();j.class=true;B=q;break}if(c=='#'){newQualifier();j.id=true;B=q;break}if(c=='['){newQualifier();j.attrName='';B=s;break}if(c.match(k)){B=A;break}if(c==','){B=n;break}throw Error(m);case p:if(c=='.'){newQualifier();j.class=true;B=q;break}if(c=='#'){newQualifier();j.id=true;B=q;break}if(c=='['){newQualifier();j.attrName='';B=s;break}if(c.match(k)){B=A;break}if(c==','){B=n;break}throw Error(m);case q:if(c.match(O)){j.attrValue=c;B=r;break}throw Error(m);case r:if(c.match(P)){j.attrValue+=c;break}if(c=='.'){newQualifier();j.class=true;B=q;break}if(c=='#'){newQualifier();j.id=true;B=q;break}if(c=='['){newQualifier();B=s;break}if(c.match(k)){B=A;break}if(c==','){B=n;break}throw Error(m);case s:if(c.match(O)){j.attrName=c;B=t;break}if(c.match(k))break;throw Error(m);case t:if(c.match(P)){j.attrName+=c;break}if(c.match(k)){B=u;break}if(c=='~'){j.contains=true;B=v;break}if(c=='='){j.attrValue='';B=x;break}if(c==']'){B=p;break}throw Error(m);case u:if(c=='~'){j.contains=true;B=v;break}if(c=='='){j.attrValue='';B=x;break}if(c==']'){B=p;break}if(c.match(k))break;throw Error(m);case v:if(c=='='){j.attrValue='';B=x;break}throw Error(m);case w:if(c==']'){B=p;break}if(c.match(k))break;throw Error(m);case x:if(c.match(k))break;if(c=='"'||c=="'"){l=c;B=z;break}j.attrValue+=c;B=y;break;case y:if(c.match(k)){B=w;break}if(c==']'){B=p;break}if(c=="'"||c=='"')throw Error(m);j.attrValue+=c;break;case z:if(c==l){B=w;break}j.attrValue+=c;break;case A:if(c.match(k))break;if(c==','){B=n;break}throw Error(m);}}switch(B){case n:case o:case p:case r:case A:newSelector();break;default:throw Error(m);}if(!g.length)throw Error(m);function escapeQuotes(a){return'"'+a.replace(/"/,'\\\"')+'"'}g.forEach(function(c){var d=c.tagName.toUpperCase();if(c.tagName!=d)c.caseInsensitiveTagName=d;var e=c.tagName;c.qualifiers.forEach(function(a){if(a.class)e+='.'+a.attrValue;else if(a.id)e+='#'+a.attrValue;else{var b=a.attrName.toLowerCase();if(a.attrName!=b)a.caseInsensitiveAttrName=b;if(a.contains)e+='['+a.attrName+'~='+escapeQuotes(a.attrValue)+']';else{e+='['+a.attrName;if(a.hasOwnProperty('attrValue'))e+='='+escapeQuotes(a.attrValue);e+=']'}}});c.selectorString=e});return g}var Q=/^([a-zA-Z:_]+[a-zA-Z0-9_\-:\.]*)$/;function validateAttribute(a){if(typeof a!='string')throw Error('Invalid request opion. attribute must be a non-zero length string.');a=a.trim();if(!a)throw Error('Invalid request opion. attribute must be a non-zero length string.');if(!a.match(Q))throw Error('Invalid request option. invalid attribute name: '+a);return a}function validateElementAttributes(a){if(!a.trim().length)throw Error('Invalid request option: elementAttributes must contain at least one attribute.');var b={};var c={};var d=a.split(/\s+/);for(var i=0;i<d.length;i++){var e=d[i];if(!e)continue;var e=validateAttribute(e);if(b.hasOwnProperty(e.toLowerCase()))throw Error('Invalid request option: observing multiple case varitations of the same attribute is not supported.');c[e]=true;b[e.toLowerCase()]=true}return Object.keys(c)}function validateOptions(a){var b={'callback':true,'queries':true,'rootNode':true,'observeOwnChanges':true};var c={};for(var d in a){if(!(d in b))throw Error('Invalid option: '+d);}if(typeof a.callback!=='function')throw Error('Invalid options: callback is required and must be a function');c.callback=a.callback;c.rootNode=a.rootNode||document;c.observeOwnChanges=a.observeOwnChanges;if(!a.queries||!a.queries.length)throw Error('Invalid options: queries must contain at least one query request object.');c.queries=[];for(var i=0;i<a.queries.length;i++){var e=a.queries[i];if(e.all){if(Object.keys(e).length>1)throw Error('Invalid request option. all has no options.');c.queries.push({all:true});continue}if(e.hasOwnProperty('attribute')){var f={attribute:validateAttribute(e.attribute)};f.elementFilter=parseElementFilter('*['+f.attribute+']');if(Object.keys(e).length>1)throw Error('Invalid request option. attribute has no options.');c.queries.push(f);continue}if(e.hasOwnProperty('element')){var g=Object.keys(e).length;var f={element:e.element,elementFilter:parseElementFilter(e.element)};if(e.hasOwnProperty('elementAttributes')){f.elementAttributes=validateElementAttributes(e.elementAttributes);g--}if(g>1)throw Error('Invalid request option. element only allows elementAttributes option.');c.queries.push(f);continue}if(e.characterData){if(Object.keys(e).length>1)throw Error('Invalid request option. characterData has no options.');c.queries.push({characterData:true});continue}throw Error('Invalid request option. Unknown query request.');}return c}function elementFilterAttributes(c){var d={};c.forEach(function(b){b.qualifiers.forEach(function(a){if(a.class)d['class']=true;else if(a.id)d['id']=true;else d[a.attrName]=true})});return Object.keys(d)}function createObserverOptions(c){var d={childList:true,subtree:true};var e;function observeAttributes(b){if(d.attributes&&!e)return;d.attributes=true;d.attributeOldValue=true;if(!b){e=undefined;return}e=e||{};b.forEach(function(a){e[a]=true;e[a.toLowerCase()]=true})}c.forEach(function(a){if(a.characterData){d.characterData=true;d.characterDataOldValue=true;return}if(a.all){observeAttributes();d.characterData=true;d.characterDataOldValue=true;return}if(a.attribute){observeAttributes([a.attribute.trim()]);return}if(a.elementFilter&&a.elementFilter.some(function(f){return f.className}))observeAttributes(['class']);var b=elementFilterAttributes(a.elementFilter).concat(a.elementAttributes||[]);if(b.length)observeAttributes(b)});if(e)d.attributeFilter=Object.keys(e);return d}function createSummary(b,c,d){b.elementFilter=d.elementFilter;b.filterCharacterData=d.characterData;var e={target:c,type:'summary',added:[],removed:[]};e.getOldParentNode=b.getOldParentNode.bind(b);if(d.all||d.element)e.reparented=[];if(d.all)e.reordered=[];b.getChanged(e);if(d.all||d.attribute||d.elementAttributes){var f=d.attribute?[d.attribute]:d.elementAttributes;var g=b.getAttributesChanged(f);if(d.attribute){e.valueChanged=[];if(g[d.attribute])e.valueChanged=g[d.attribute];e.getOldAttribute=function(a){return b.getOldAttribute(a,d.attribute)}}else{e.attributeChanged=g;if(d.elementAttributes){d.elementAttributes.forEach(function(a){if(!e.attributeChanged.hasOwnProperty(a))e.attributeChanged[a]=[]})}e.getOldAttribute=b.getOldAttribute.bind(b)}}if(d.all||d.characterData){var h=b.getCharacterDataChanged();e.getOldCharacterData=b.getOldCharacterData.bind(b);if(d.characterData)e.valueChanged=h;else e.characterDataChanged=h}if(e.reordered)e.getOldPreviousSibling=b.getOldPreviousSibling.bind(b);return e}function MutationSummary(f){var g=false;var h=validateOptions(f);var i=createObserverOptions(h.queries);var j=h.rootNode;var k=h.callback;var l=Array.prototype.concat.apply([],h.queries.map(function(a){return a.elementFilter?a.elementFilter:[]}));if(!l.length)l=undefined;var m=h.queries.some(function(a){return a.all});var n=[];if(MutationSummary.createQueryValidator){n=h.queries.map(function(a){return MutationSummary.createQueryValidator(j,a)})}function checkpointQueryValidators(){n.forEach(function(a){if(a)a.recordPreviousState()})}function runQueryValidators(c){n.forEach(function(a,b){if(a)a.validate(c[b])})}function createSummaries(b){if(!b||!b.length)return[];var c=new MutationProjection(j,l,m);c.processMutations(b);return h.queries.map(function(a){return createSummary(c,j,a)})}function changesToReport(e){return e.some(function(b){var c=['added','removed','reordered','reparented','valueChanged','characterDataChanged'];if(c.some(function(a){return b[a]&&b[a].length}))return true;if(b.attributeChanged){var d=Object.keys(b.attributeChanged).some(function(a){return b.attributeChanged[a].length});if(d)return true}return false})}var o=new E(function(a){if(!h.observeOwnChanges)o.disconnect();var b=createSummaries(a);runQueryValidators(b);if(h.observeOwnChanges)checkpointQueryValidators();if(changesToReport(b))k(b);if(!h.observeOwnChanges){checkpointQueryValidators();o.observe(j,i)}});this.reconnect=function(){if(g)throw Error('Already connected');o.observe(j,i);g=true;checkpointQueryValidators()};this.disconnect=function(){if(!g)throw Error('Not connected');var a;if(typeof o.takeRecords=='function')a=o.takeRecords();else console.log("Warning: MutationObserver.takeRecords not implemented. Current changes cannot be reported.");o.disconnect();g=false;var b=createSummaries(a);if(changesToReport(b))return b};this.reconnect()}C.MutationSummary=MutationSummary;C.MutationSummary.NodeMap=NodeMap;C.MutationSummary.parseElementFilter=parseElementFilter})(this);